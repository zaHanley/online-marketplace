import { type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import { useForm } from "react-hook-form";
import { useRouter } from "next/router";

type SellItemForm = { name: string; description: string; price: string };

const Sell: NextPage = () => {
  const createListing = api.listings.create.useMutation();
  const router = useRouter();
  const { register, handleSubmit } = useForm<SellItemForm>();
  const onSubmit = (formData: SellItemForm) => {
    createListing.mutateAsync(formData).then(
      () => {
        router.push("/");
      },
      (err) => {
        console.log(err);
      }
    );
  };

  return (
    <>
      <Head>
        <title>Sell an Item</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-slate-800 to-[#15162c]">
        <div className="container flex h-screen flex-col items-center justify-center gap-12 px-4 py-16">
          <h1 className="text-white">Sell an Item</h1>
          <form
            className="flex flex-col gap-6"
            onSubmit={handleSubmit(onSubmit)}
          >
            <div>
              <label
                htmlFor="title"
                className="mb-2 text-sm font-medium text-gray-900 dark:text-white"
              >
                Title
              </label>
              <input
                {...register("name")}
                type="text"
                id="title"
                className="w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              />
            </div>
            <div>
              <label
                htmlFor="description"
                className="mb-2 flex text-sm font-medium text-gray-900 dark:text-white"
              >
                Description
              </label>
              <textarea
                {...register("description")}
                id="description"
                rows={8}
                className="flex w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              />
            </div>
            <div>
              <label
                htmlFor="price"
                className="mb-2 flex text-sm font-medium text-gray-900 dark:text-white"
              >
                Price
              </label>
              <input
                {...register("price")}
                type="text"
                step="0.01"
                id="price"
                className="flex w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
              />
            </div>

            <button
              type="submit"
              className="mb-2 mr-2 rounded-lg bg-gradient-to-r from-cyan-500 to-blue-500 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-gradient-to-bl focus:outline-none focus:ring-4 focus:ring-cyan-300 dark:focus:ring-cyan-800"
            >
              Create
            </button>
          </form>
        </div>
      </main>
    </>
  );
};

export default Sell;
